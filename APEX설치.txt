APEX & ORDS 설치 

1. APEX 설치 요구사항
- oracle 12.1 이후 버전의 Oracle EE, SE, XE 에디션에서 지원
- RAC 지원
- Memory_target 사이즈 최소 300MB 이상 구성
- Oracle XML DB 기능 필요(must) 
- 지원되는 브라우져 : Chrome, Mozilla, Asfari, Edge
- 웹리스너 필요 : 오라클 웹로직, Oracle HTTP 서버, Apache 또는 ORDS 19.x 이후 버전

2. APEX 설치 
2.1 APEX 다운로드 및 압축 풀기
- apex_21.1.zip 다운로드 및 압축 풀기
- 디렉토리 변경 "apex"
2.2 APEX DB 환경 구성 
- Full 개발자 환경인 경우 
   * DB SYS 계정으로 환경 구성 sql 실행 필요
    SQL> @apexins.sql SYSAUX SYSAUX TEMP /i/  
- Runtime 환경인 경우
  SQL> @apexrtins.sql SYSAUX SYSAUX TEMP /i/ 

* 환경 구성 SQL 실행과정에서 APEX에 필요한 DB계정이 생성됨
   . APEX_210100(or APEX_210200) : APEX 스키마와 메터정보 소유자
   . FLOWS_FILES : APEX 업로드 파일들의 소유자
   . APEX_PUBLIC_USER : ORDS, HTTP Server, mod_sql 관련 구성에 사용되는 유저
* ORDS(RESTFul) 서비스 구성된 경우 추가되는 DB 계정
   . APEX_REST_PUBLIC_USER : APEX에 저장된 RESTfule 서비스 정의 호출용 계정
   . APEX_LISTENR : APEX에 저장된 RESTful 서비스 정의를 쿼리하는 데 사용되는 계정

2.3 APEX 인스턴스 관리자 계정 생성
- APEX 인스턴스 관리자 : APEX 워크스페이스 프로비저닝 관리, APEX 기능 및 인스턴스 구성, 보안 관리등을 책임 지는 APEX 관리 수퍼유저임
- apxchpwd.sql 실행
   . SYS계정, 실행시 요청되는 정보를 입력 함
   . account : admin   -- Default 계정이며 다른 이름을 입력해도 됨
   . email address : admin@...    -- 이메일 계정 입력.
   . password : Welcome1#  -- 패스워드 

   * apxchpwd.sql 역할
      - 초도 APEX 인스턴스 관리자(admin) 생성 및 비밀번호 변경
      - Runtime 환경을 개발환경으로 변환 할때 비밀번로 변경
      - 인스턴스 관리자(admin) 비밀번호 변경
      - 인스턴스 관리자 계정 unlocking

2.4. 리스트타트 프로세스(http 데몬)

  기존에 HTTP서비스 중인 환경에서는 HTTP 데몬을 재기동 해줘야 함

2.5. APEX_PUBLIC_USER 계정 환경설정
- apex_public_user 계정 활성화 및 비밀번호 변경

  SQL>ALTER USER APEX_PUBLIC_USER ACCOUNT UNLOCK ;
  SQL>ALTER USER APEX_PUBLIC_USER IDENTIFIED BY Welcome1;
  
2.6 ORDS RESTful 서비스 환경 구성(Must)
  . APEX를 처음 설치 할 경우에는 apex_rest_config.sql 반드시 실행해야 함.
  . SYS 계정으로 apex_rest_config.sql 실행(Static File support)
  . APEX_LISTENER, APEX_REST_PUBLIC_USER 계정 및 비밀번호 생성이 수행됨

3. ORDS standalone 서비스 설치 및 구성
3.1 ords 다운로드 및 압축해제
  - 최신 또는 원하는 버전의 ords 다운로드
  - 디렉토리 생성 및 압축 해제
     mkdir ords
     cd ords
     unzip ords.version.number.zip
  - ordw.war 파일 확인
  * context root를 /ords 로 하고싶을 때는 ords.war로 /apex로 하고 싶을 경우는 ords.war를 apex.war로 rename 하면 됨

  - 이미지 디렉토리 복사
   cd $ORDS_HOME
   mkdir -p apex
   cp -r ../apex/images ./apex/.

   apex/images 디렉토리를 ords 서비스가 설치 된 디렉토리로 복사를 해야함


3.2 ORDS 설치 검증


java -jar ords.war validate --database pdb18

Cannot validate database configuration pdb18 because file pdb18_pu.xml does not exist.


3.2 ORDS 설치 프로그램 권한 스크립트 실행
  - ords_installer_privileges.sql는 할당된 데이터베이스 사용자에게 ORDS 설치, 업그레이드, 검증 및 제거할 수 있는 권한을 제공하는 스크립트임.
  - SYS 계정으로 ords 계정 생성 후 스크립트 실행
    SQL>create user ords identified by Welcome1 default tablespace users quota unlimited on users;
    SQL>grant connect, resource to ords;
    SQL>@installer/ords_installer_privileges.sql ords

3.3 ords 설치

java -jar ords.war install advanced

---------------------------------------------------
This Oracle REST Data Services instance has not yet been configured.
Please complete the following prompts


Enter the location to store configuration data: /home/woko/ords/config
Specify the database connection type to use.
Specify the database connection type to use.
Enter number for [1] Basic  [2] TNS  [3] Custom URL [1]:
Enter the name of the database server [localhost]:wokot450.kr.oracle.com
Enter the database listen port [1521]:
Enter 1 to specify the database service name, or 2 to specify the database SID [1]:
Enter the database service name:pdb18.kr.oracle.com
Enter 1 if you want to verify/install Oracle REST Data Services schema or 2 to skip this step [1]:
Enter the database password for ORDS_PUBLIC_USER:
Confirm password:
Requires to login with administrator privileges to verify Oracle REST Data Services schema.

Enter the administrator username:ords
Enter the database password for ords:
Confirm password:
Connecting to database user: ords url: jdbc:oracle:thin:@//wokot450.kr.oracle.com:1521/pdb18.kr.oracle.com

Retrieving information.
Enter the default tablespace for ORDS_METADATA [SYSAUX]:
Enter the temporary tablespace for ORDS_METADATA [TEMP]:
Enter the default tablespace for ORDS_PUBLIC_USER [SYSAUX]:
Enter the temporary tablespace for ORDS_PUBLIC_USER [TEMP]:
Enter 1 if you want to use PL/SQL Gateway or 2 to skip this step.
If using Oracle Application Express or migrating from mod_plsql then you must enter 1 [1]:
Enter the PL/SQL Gateway database user name [APEX_PUBLIC_USER]:
Enter the database password for APEX_PUBLIC_USER:
Confirm password:
Enter 1 to specify passwords for Application Express RESTful Services database users (APEX_LISTENER, APEX_REST_PUBLIC_USER) or 2 to skip this step [1]:
Enter the database password for APEX_LISTENER:
Confirm password:
Enter the database password for APEX_REST_PUBLIC_USER:
Confirm password:
Enter a number to select a feature to enable:
   [1] SQL Developer Web  (Enables all features)
   [2] REST Enabled SQL
   [3] Database API
   [4] REST Enabled SQL and Database API
   [5] None
Choose [1]:1
2022-02-28T10:26:31.251Z INFO        reloaded pools: []
Installing Oracle REST Data Services version 21.4.1.r0250904
... Log file written to /home/woko/ords_install_core_2022-02-28_192631_00404.log
... Verified database prerequisites
... Created Oracle REST Data Services proxy user
... Created Oracle REST Data Services schema
... Granted privileges to Oracle REST Data Services
... Created Oracle REST Data Services database objects
... Log file written to /home/woko/ords_install_datamodel_2022-02-28_192648_00872.log
... Log file written to /home/woko/ords_install_scheduler_2022-02-28_192649_00993.log
... Log file written to /home/woko/ords_install_apex_2022-02-28_192652_00189.log
Completed installation for Oracle REST Data Services version 21.4.1.r0250904. Elapsed time: 00:00:22.183

Enter 1 if you wish to start in standalone mode or 2 to exit [1]:2

참고 ords 파마미터를 사용한 인스톨 정 및 확인

./params/ords_params.properties 샘플

db.hostname=wokot405.kr.oracle.com
db.port=1521
db.servicename=pdb18.kr.oracle.com
db.sid=pdb18
db.username=APEX_PUBLIC_USER
migrate.apex.rest=false
rest.services.apex.add=true
rest.services.ords.add=true
schema.tablespace.default=SYSAUX
schema.tablespace.temp=TEMP
standalone.http.port=8080
standalone.static.images=/home/woko/ords/apex/images
user.tablespace.default=SYSAUX
user.tablespace.temp=TEMP

java -jar ords.war install --parameterFile /home/woko/ords/params/ords_params.properties

3.5 context-root 디렉토리 생성

context-root 디렉토리 생성

mkdir -p /home/woko/ords/config/ords/standalone/doc_root

3.6 ORDS standalone 서비스 확인

테스트 파일 생성
cd /home/woko/ords/config/ords/standalone/doc_root
vi hello.txt
hi~ APEX 

ords standalone 서비스 시작

java -jar ords.war standalone

브라우저에서
http://hostname:8080/hello.txt

hi~ APEX 확인 되면 standalone 설치 확인

3.7 ORDS 서비스 example

enable 스키마

conn hr 계정
EXEC ords.enable_schema;
COMMIT;

connect sys 계정
GRANT SODA_APP TO hr

Start ORDS in standalone mode:
java -jar ords.war standalone


401 error

detail : "not authorized"

Enable the schema.

1.hr 계정
begin
  ords.enable_schema;
  commit;
end;

2.create resource 

begin
ords.create_service(
      p_module_name => 'examples.employees' ,
      p_base_path  => '/examples/employees/',
      p_pattern =>  '.' ,
      p_items_per_page => 7,
      p_source  =>  'select * from emp order by empno desc');
commit;
end;

verify the resource

curl -i http://hostname:8080/ords/hr/examples/employees/

Create a privilege.

HR 계정

begin
  ords.create_role('HR Administrator');     
 
  ords.create_privilege(
      p_name => 'example.employees',
      p_role_name => 'HR Administrator',
      p_label => 'Employee Data',
      p_description => 'Provide access to employee HR data');
  commit;
end;

select id,name from user_ords_privileges where name = 'example.employees';
ID    NAME                                                                                                                                                                                                                                                           
----- -----------------
10260 example.employees

Associate the privilege with resources.

begin
 ords.create_privilege_mapping(
      p_privilege_name => 'example.employees',
      p_pattern => '/examples/employees/*');     
  commit;
end;

select privilege_id, name, pattern from user_ords_privilege_mappings;
PRIVILEGE_ID NAME                 PATTERN          
------------ -------------------- ---------------------
10260        example.employees    /examples/employees/*

You can confirm that the /examples/employees/ resource
curl -i http://192.168.0.23:8080/ords/hr/examples/employees/

HTTP/1.1 401 Unauthorized
Content-Type: text/html
Transfer-Encoding: chunked
 
<!DOCTYPE html>
<html>
...
</html>



Create an end user.

java -jar ords.war user "hr" "HR Administrator"

Sign in as the end user


hr 패스워드 http://192.168.0.23:8080/ords/hr/examples/employees/
입력

데이터 확인

Register the OAuth client

HR 계정
begin 
 oauth.create_client(
      p_name => 'Client Credentials Example',
      p_grant_type => 'client_credentials',
      p_privilege_names => 'example.employees',
      p_support_email => 'support@example.com');
 commit;
end;

select client_id,client_secret from user_ords_clients where name = 'Client Credentials Example';


CLIENT_ID                        CLIENT_SECRET
-------------------------------- --------------------------------
CYxfVbHyLnuAFCy4DjuFjg..         1BLwXeCW644kPsTQ9j6YSw..


Grant the OAuth client a required role.
begin 
 oauth.grant_client_role(
     'Client Credentials Example',
     'HR Administrator');
 commit;
end;

 CLIENT_ID CLIENT_NAME                                 ROLE_ID ROLE_NAME
---------- ---------------------------------------- ---------- ----------------------------------------
     10044 Client Credentials Example                    10035 HR Administrator

RESR 서비스 확인


http://wokot450.kro.racoe.com:8080/ords/hr/examples/employees/


4. Network service 활성화

- APEX에서 PDF 리포팅, 웹서비스 사용 또는 이메일 전송들을 위해서는 네트워크 서비스를 활성화해야 함.

SYS 계정으로 실행

모든 host에서 접속, 수행을 허용 할 경우 

DECLARE
  ACL_PATH  VARCHAR2(4000);
BEGIN
  -- Look for the ACL currently assigned to '*' and give APEX_210200
  -- the "connect" privilege if APEX_210200 does not have the privilege yet.
 
  SELECT ACL INTO ACL_PATH FROM DBA_NETWORK_ACLS
   WHERE HOST = '*' AND LOWER_PORT IS NULL AND UPPER_PORT IS NULL;
 
  IF DBMS_NETWORK_ACL_ADMIN.CHECK_PRIVILEGE(ACL_PATH, 'APEX_210200',
     'connect') IS NULL THEN
      DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE(ACL_PATH,
     'APEX_210200', TRUE, 'connect');
  END IF;
 
EXCEPTION
  -- When no ACL has been assigned to '*'.
  WHEN NO_DATA_FOUND THEN
  DBMS_NETWORK_ACL_ADMIN.CREATE_ACL('power_users.xml',
    'ACL that lets power users to connect to everywhere',
    'APEX_210200', TRUE, 'connect');
  DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL('power_users.xml','*');
END;
/
COMMIT;


local host에서만 필요한 경우

DECLARE
  ACL_PATH  VARCHAR2(4000);
BEGIN
  -- Look for the ACL currently assigned to 'localhost' and give APEX_210100
  -- the "connect" privilege if APEX_210200 does not have the privilege yet.
  SELECT ACL INTO ACL_PATH FROM DBA_NETWORK_ACLS
   WHERE HOST = 'localhost' AND LOWER_PORT IS NULL AND UPPER_PORT IS NULL;
   
  IF DBMS_NETWORK_ACL_ADMIN.CHECK_PRIVILEGE(ACL_PATH, 'APEX_210200',
     'connect') IS NULL THEN
      DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE(ACL_PATH,
     'APEX_210200', TRUE, 'connect');
  END IF;
  
EXCEPTION
  -- When no ACL has been assigned to 'localhost'.
  WHEN NO_DATA_FOUND THEN
  DBMS_NETWORK_ACL_ADMIN.CREATE_ACL('local-access-users.xml',
    'ACL that lets users to connect to localhost',
    'APEX_210100', TRUE, 'connect');
  DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL('local-access-users.xml','localhost');
END;
/
COMMIT;

권한 부여

SYS 계정으로 실행

모든 host에 허용할 경우

BEGIN
    DBMS_NETWORK_ACL_ADMIN.APPEND_HOST_ACE(
        host => '*',
        ace => xs$ace_type(privilege_list => xs$name_list('connect'),
                           principal_name => 'APEX_210200',
                           principal_type => xs_acl.ptype_db));
END;
/

local host에 허용 할 경우

BEGIN
    DBMS_NETWORK_ACL_ADMIN.APPEND_HOST_ACE(
        host => 'localhost',
        ace => xs$ace_type(privilege_list => xs$name_list('connect'),
                           principal_name => 'APEX_210100',
                           principal_type => xs_acl.ptype_db));
END;
/

5. 언어 설정
NLS_LANG=Korean_Korea.AL32UTF8
export NLS_LANG

cd ./apex/builder

APEX_210200 유저로
(ALTER SESSION SET CURRENT_SCHEMA = APEX_210200;)
@load_kr.sql 실행

6.  APEX 워크스페이스 생성

http://192.168.0.23:8080/ords/apex_admin

계정: admin
패스워드 : ********




6. APEX embedded plsql 게이트웨이 구성(deprecated)    

* Oracle Note 1576588.1.

- Anonymous 계정 활성화
SYS 계정으로 실행

SQL>@apex_epg_config.sql /home/woko   - "/home/woko/apex" 는 APEX HOME임(zip 파일 푼 곳) - 이미지 디렉토리 업그레이드(이전에 활용하고 있을때)

SQL>ALTER USER ANONYMOUS ACCOUNT UNLOCK;

- Oracle XML DB HTTP 서버의 HTTP에 할당된 포트 확인
SQL> SELECT DBMS_XDB.GETHTTPPORT FROM DUAL;   - 결과 값이 "0" 이면  Oracle XML DB HTTP Server는 Disable 상태임
GETHTTPPORT
-----------
          0
If the port number returns 0, the Oracle XML DB HTTP Server is disabled. 
- 결과 값이 "0" 이면  Oracle XML DB HTTP Server는 Disable 상태임
- Oracle XML DB 프로토콜 서버 포트 확인
GETHTTPPORT
-----------
          0

if the port number returns 0, the Oracle XML DB Protocol Server is disabled. 
- 결과 값이 "0" 이면  Oracle XML DB protocol server는 Diaable 상태임

- Oracle XML DB Protocol 서버 활성화


EXEC DBMS_XDB.SETHTTPPORT(8443);


- Static 파일 구성

apex_rest_config.sql 실행


참조 문서 : https://docs.oracle.com/en/database/oracle/application-express/20.1/htmig/configuring-embedded-PL-SQL-gateway.html#GUID-3C35896B-9987-4297-920A-64044A01F17F

BEGIN
  WWV_FLOW_SECURITY.g_security_group_id := 501;
  WWV_FLOW_FND_USER_API.unlock_account('ADMIN');
  COMMIT;
END;
/

1. defaults.xml 확인 및 수정
2. Setup a new database connection

$JAVA_HOME/bin/java -jar ords.war setup --database hr_pdb18

* ORSD 서비스 인스톨 스킵
mod_plsql magration 1
Gateway user : hr

3. We need to associate a base URL path with the new pool, so we can run the application.

$JAVA_HOME/bin/java -jar ords.war map-url --type base-path /app app_pdb1

스태틱 인증 

1. 계정 언락 및 롤 확링

SYS 계정으로 실행

ALTER USER anonymous ACCOUNT UNLOCK;

SELECT *
FROM DBA_ROLE_PRIVS
WHERE GRANTED_ROLE = 'XDBADMIN';

2. DAD 생성 및 속성 지정

가상 경로 맵링 과정임

EXEC DBMS_EPG.CREATE_DAD('HR_DAD', '/plsql/*');

EXEC DBMS_EPG.SET_DAD_ATTRIBUTE('HR_DAD', 'database-username', 'HR');

3. 실행 권한 부여

GRANT EXECUTE ON DBMS_EPG TO HR;

4. PLSQL 게이트웨이가 프로시져 및 데이터에 액세스할 수 있도록 권한 부여

해당계정으로 로그인(예:HR)

connect hr/hr

실행 권한 부여
EXEC DBMS_EPG.AUTHORIZE_DAD('HR_DAD');

5. PLSQL 게이트웨이 테스트 프로그램
HR 계정으로 실행

CREATE OR REPLACE PROCEDURE print_employees IS
  CURSOR emp_cursor IS
    SELECT last_name, first_name
      FROM hr.employees
        ORDER BY last_name;
BEGIN
  HTP.PRINT('<html>');
  HTP.PRINT('<head>');
  HTP.PRINT('<meta http-equiv="Content-Type" content="text/html">');
  HTP.PRINT('<title>List of Employees</title>');
  HTP.PRINT('</head>'); 
  HTP.PRINT('<body TEXT="#000000" BGCOLOR="#FFFFFF">');
  HTP.PRINT('<h1>List of Employees</h1>');
  HTP.PRINT('<table width="40%" border="1">');
  HTP.PRINT('<tr>');
  HTP.PRINT('<th align="left">Last Name</th>');
  HTP.PRINT('<th align="left">First Name</th>');
  HTP.PRINT('</tr>');
  FOR emp_record IN emp_cursor LOOP
    HTP.PRINT('<tr>');
    HTP.PRINT('<td>' || emp_record.last_name  || '</td>');
    HTP.PRINT('<td>' || emp_record.first_name || '</td>');
  END LOOP;
  HTP.PRINT('</table>');
  HTP.PRINT('</body>');
  HTP.PRINT('</html>');
END;
/






===============================

$JAVA_HOME/bin/java -jar ords.war set-property jdbc.auth.enabled true

# Specific pool.
$JAVA_HOME/bin/java -jar ords.war set-property --conf pdb1 jdbc.auth.enabled true

또는
"../ords/config/ords/defaults.xml"에 추가


<entry key="jdbc.auth.enabled">true</entry>

PL/SQL gateway 인 경우에는 아래 내용 추가

<entry key="security.requestValidationFunction">wwv_flow_epg_include_modules.authorize</entry>

SSL 구성

# Create a self-signed certificate in a JKS keystore.
keytool -genkey -keyalg RSA -alias selfsigned -keystore keystore.jks \
   -dname "CN=wokot450.kr.oracle.com, OU=Example Department, O=Example Company, L=Birmingham, ST=West Midlands, C=GB" \
   -storepass Welcome1 -validity 3600 -keysize 2048 -keypass Welcome1

# Create a PKCS12 keystore from the JKS keystore.
keytool -importkeystore -srckeystore keystore.jks -srcalias selfsigned -srcstorepass Welcome1 \
   -destkeystore keystore.p12 -deststoretype PKCS12 -deststorepass Welcome1 -destkeypass Welcome1

# Extract the key and certificate in PEM format.
openssl pkcs12 -in keystore.p12 -nodes -nocerts -out wokot450.kr.oracle.com-key.pem
openssl pkcs12 -in keystore.p12 -nokeys -out wokot450.kr.oracle.com.pem

# Convert them to DER format.
openssl pkcs8 -topk8 -inform PEM -outform DER -in wokot450.kr.oracle.com-key.pem -out wokot450.kr.oracle.com-key.der -nocrypt
openssl x509 -inform PEM -outform DER -in wokot450.kr.oracle.com.pem -out wokot450.kr.oracle.com.der

ls *.der
wokot450.kr.oracle.com.der  wokot450.kr.oracle.com-key.der

cd /home/woko/ords/config/ords/standalone
vi standalone.properties
jetty.secure.port=8443
ssl.cert=/home/woko/ords/ssl/wokot450.kr.oracle.com.der
ssl.cert.key=/home/woko/ords/ssl/wokot450.kr.oracle.com-key.der
ssl.host=wokot450.kr.oracle
standalone.context.path=/ords
standalone.doc.root=/home/woko/ords/config/ords/standalone/doc_root
standalone.scheme.do.not.prompt=true
standalone.static.context.path=/i
standalone.static.path=/home/woko/ords/apex/images


** static 구성

vi ../config/ords/standalone/standalone.properties

mkdir -p /home/woko/ords/config/ords/standalone/doc_root

java -jar ords.war standalone --doc-root /home/woko/ords/config/ords/standalone/doc_root


mkdir -p /home/woko/ords/logs

vi startords
#!/bin/bash
LOGFILE=/home/woko/ords/logs/ords-`date +"%Y""%m""%d"`.log
export JAVA_OPTIONS="-Dorg.eclipse.jetty.server.Request.maxFormContentSize=3000000 -Duser.timezone=UTC"
nohup java ${JAVA_OPTIONS} -jar ords.war standalone >> $LOGFILE 2>&1 &
echo "if you want to View, using tail -f $LOGFILE"

vi stopords
#!/bin/bash
kill `ps -ef | grep ords.war | awk '{print $2}'`


5. 네트워크 서비스 구성( 12c later)
네트워크 서비스를 활성화해야 아웃바운드 메일을 보내거나 웹서비스를 사용하거나 APEX에서 PDF 보고서 인쇄를 사용할 수 있음

SYS 계정으로

BEGIN
    DBMS_NETWORK_ACL_ADMIN.APPEND_HOST_ACE(
        host => '*',
        ace => xs$ace_type(privilege_list => xs$name_list('connect'),
                           principal_name => 'APEX_210200',
                           principal_type => xs_acl.ptype_db));
END;
/

ORA-44416 : Invalid CAL 에러 발생시

https://docs.oracle.com/en/database/oracle/application-express/21.1/htmig/enabling-network-services-in-Oracle-db11g-or-later.html#GUID-C795F54B-D05F-4463-8424-052FD4C1CE52 참조




https://192.168.0.23:8443/ords
워크스페이스 생성

https://192.168.0.23:8443/ords/apex_admin   -- APEX admin 페이지
admin
Welcome1#


SELECT *
FROM DBA_ROLE_PRIVS
WHERE GRANTED_ROLE = 'XDBADMIN';

EXEC DBMS_EPG.CREATE_DAD('HR_DAD', '/plsql/*');
EXEC DBMS_EPG.SET_DAD_ATTRIBUTE('HR_DAD', 'database-username', 'HR');
GRANT EXECUTE ON DBMS_EPG TO HR;

conn HR/HR@pdb20
EXEC DBMS_EPG.AUTHORIZE_DAD('HR_DAD');

SET SERVEROUTPUT ON;
BEGIN
  show_dad_auth_status('HR_DAD');
END;
/



CREATE OR REPLACE PROCEDURE HelloWorld AS
BEGIN
	htp.htitle('My first dynamic Web page');
	htp.print('Hello world');
	htp.line;
END HelloWorld;
/


CREATE OR REPLACE PROCEDURE html_page IS
BEGIN
  HTP.HTMLOPEN;                            -- generates <HTML>
  HTP.HEADOPEN;                            -- generates <HEAD>
  HTP.TITLE('Title');                      -- generates <TITLE>Hello</TITLE>
  HTP.HEADCLOSE;                           -- generates </HTML> 

  -- generates <BODY TEXT="#000000" BGCOLOR="#FFFFFF">
  HTP.BODYOPEN( cattributes => 'TEXT="#000000" BGCOLOR="#FFFFFF"');

  -- generates <H1>Heading in the HTML File</H1>
  HTP.HEADER(1, 'Heading in the HTML File');

  HTP.PARA;                                 -- generates <P>        
  HTP.PRINT('Some text in the HTML file.'); 
  HTP.BODYCLOSE;                            -- generates </BODY>
  HTP.HTMLCLOSE;                            -- generates </HTML>
END;
/


CREATE OR REPLACE PROCEDURE print_employees IS
  CURSOR emp_cursor IS
    SELECT last_name, first_name
      FROM hr.employees
        ORDER BY last_name;
BEGIN
  HTP.PRINT('<html>');
  HTP.PRINT('<head>');
  HTP.PRINT('<meta http-equiv="Content-Type" content="text/html">');
  HTP.PRINT('<title>List of Employees</title>');
  HTP.PRINT('</head>'); 
  HTP.PRINT('<body TEXT="#000000" BGCOLOR="#FFFFFF">');
  HTP.PRINT('<h1>List of Employees</h1>');
  HTP.PRINT('<table width="40%" border="1">');
  HTP.PRINT('<tr>');
  HTP.PRINT('<th align="left">Last Name</th>');
  HTP.PRINT('<th align="left">First Name</th>');
  HTP.PRINT('</tr>');
  FOR emp_record IN emp_cursor LOOP
    HTP.PRINT('<tr>');
    HTP.PRINT('<td>' || emp_record.last_name  || '</td>');
    HTP.PRINT('<td>' || emp_record.first_name || '</td>');
  END LOOP;
  HTP.PRINT('</table>');
  HTP.PRINT('</body>');
  HTP.PRINT('</html>');
END;
/


oracle    4613  4314  0 Jan21 ?        01:04:03 /home/oracle/em/agent_13.5.0.0.0/oracle_common/jdk/bin/java -Xmx134M -XX:MaxMetaspaceSize=224M -server -Djava.security.egd=file:///dev/./urandom -Dsun.lang.ClassLoader.allowArraySyntax=true -XX:-UseLargePages -XX:+UseLinuxPosixThreadCPUClocks -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+UseCompressedOops -DHTTPClient.dontSeekTerminatingChunk=true -Dwatchdog.pid=4314 -cp /home/oracle/em/agent_13.5.0.0.0/jdbc/lib/ojdbc8.jar:/home/oracle/em/agent_13.5.0.0.0/ucp/lib/ucp.jar:/home/oracle/em/agent_13.5.0.0.0/oracle_common/modules/com.oracle.http_client.http_client.jar:/home/oracle/em/agent_13.5.0.0.0/oracle_common/modules/oracle.xdk/xmlparserv2.jar:/home/oracle/em/agent_13.5.0.0.0/oracle_common/modules/oracle.dms/dms.jar:/home/oracle/em/agent_13.5.0.0.0/oracle_common/modules/oracle.odl/ojdl.jar:/home/oracle/em/agent_13.5.0.0.0/oracle_common/modules/oracle.odl/ojdl2.jar:/home/oracle/em/agent_13.5.0.0.0/lib/optic.jar:/home/oracle/em/agent_13.5.0.0.0/sysman/jlib/log4j-core.jar:/home/oracle/em/agent_13.5.0.0.0/jlib/sshd-common.jar:/home/oracle/em/agent_13.5.0.0.0/jlib/sshd-core.jar:/home/oracle/em/agent_13.5.0.0.0/jlib/sshd-sftp.jar:/home/oracle/em/agent_13.5.0.0.0/jlib/slf4j-api-1.7.5.jar:/home/oracle/em/agent_13.5.0.0.0/jlib/bcprov-jdk15on-162.jar:/home/oracle/em/agent_13.5.0.0.0/jlib/bcpkix-jdk15on-162.jar:/home/oracle/em/agent_13.5.0.0.0/jlib/gcagent_core.jar:/home/oracle/em/agent_13.5.0.0.0/sysman/jlib/emagentSDK-intg.jar:/home/oracle/em/agent_13.5.0.0.0/sysman/jlib/emagentSDK.jar oracle.sysman.gcagent.tmmain.TMMain








db.hostname=wokot450.kr.oracle.com
db.port=1521
db.servicename=pdb18.kr.oracle.com
plsql.gateway.add=false
rest.services.apex.add=false
rest.services.ords.add=true
schema.tablespace.default=SYSAUX
schema.tablespace.temp=TEMP
standalone.https.port=8443
standalone.mode=true
standalone.ssl.cert.path=/home/woko/ords/ssl
standalone.ssl.host=wokot450.kr.oracle.com
standalone.ssl.key.path=/home/woko/ords/ssl
standalone.use.https=true
standalone.use.ssl.cert=true
user.public.password=password
user.tablespace.default=SYSAUX
user.tablespace.temp=TEMP
jdbc.auth.enabled=true   --Enable Database Authentication


db.hostname=localhost
db.password=password
db.port=1521
db.servicename=orcl.example.com
db.username=APEX_PUBLIC_USER
plsql.gateway.add=true
rest.services.apex.add=true
rest.services.ords.add=true
schema.tablespace.default=SYSAUX
schema.tablespace.temp=TEMP
standalone.http.port=8080
standalone.mode=true
standalone.static.images=/path/to/images
standalone.use.https=false
user.apex.listener.password=password
user.apex.restpublic.password=password
user.public.password=password
user.tablespace.default=SYSAUX
user.tablespace.temp=TEMP
